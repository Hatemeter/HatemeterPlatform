{"version":3,"sources":["views/GeneralTrend/GeneralTrends.js","views/GeneralTrend/MessagesSide.jsx"],"names":["window","sigma","require","echarts","GeneralTrends","props","_this","Object","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","grafo","undefined","kaywords","loadHashTagNetwork","data","graph","clear","refresh","cameras","goTo","x","y","angle","ratio","edges","forEach","e","type","nodes","length","settings","read","loadkeywordsCloud","me","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","init","document","getElementById","isDisposed","dispose","setState","keywordOption","title","textStyle","color","fontFamily","tooltip","show","toolbox","orient","backgroundColor","borderColor","borderWidth","drawOutOfBound","padding","showTitle","feature","mark","dataZoom","dataView","magicType","restore","saveAsImage","name","lang","myTool","series","rotationRange","rotationStep","autoSize","enable","minSize","normal","setOption","state","redrawKeywords","handleHashtagChange","selectedOption","$","html","widget","hashtag_selected","ajax","crossDomain","url","HateMeterApiUrlPrefix","snapshot","label","dataType","async","success","response","hasOwnProperty","net","keywords","ReactDOM","unmountComponentAtNode","console","error","render","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_MessagesSide__WEBPACK_IMPORTED_MODULE_10__","messages","xhr","status","log","onFormSubmit","evt","preventDefault","searchtext","snaphot_selected","snapshotList","latestUsed","snapshotmap","chart","tweets","retweets","reply","body","classList","add","JSON","stringify","opts","keys","h","push","value","sort","hashtag_list","property","reactstrap__WEBPACK_IMPORTED_MODULE_9__","xs","sm","lg","style","fontSize","renderer","container","defaultLabelColor","minEdgeSize","maxEdgeSize","labelThreshold","zoomingRatio","doubleClickZoomingRatio","zoomMin","_this2","className","id","height","width","onResize","react_resize_detector__WEBPACK_IMPORTED_MODULE_15__","handleWidth","handleHeight","htmlFor","react_select__WEBPACK_IMPORTED_MODULE_8__","onChange","options","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","onClick","marginRight","cursor","onSubmit","placeholder","ref","target","Component","MessagesSideBar","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","messagesList","map","m","react__WEBPACK_IMPORTED_MODULE_5___default","src","profileImgUrl","date","href","encodeURI","text","replace","by","fromUser","open","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_6__","activeTab","tabId"],"mappings":"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","file":"static/js/6.f2e432b2.chunk.js","sourcesContent":["import React, {Component, lazy, Suspense} from 'react';\nimport Select from 'react-select';\nimport {\n    Badge,\n    Button,\n    ButtonDropdown,\n    ButtonGroup,\n    ButtonToolbar,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    CardTitle,\n    Col,\n    Form,\n    Input,\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle, Label,\n    Progress,\n    Row,\n    Table,\n} from 'reactstrap';\nimport MessagesSideBar from './MessagesSide'\nimport $ from \"jquery\";\nimport '../../index.css'\nimport './GeneralTrends.css'\nimport ReactDOM from \"react-dom\";\nimport ReactResizeDetector from 'react-resize-detector';\n\nwindow.sigma = require('sigma');\nrequire('sigma/build/plugins/sigma.parsers.json.min')\nrequire('sigma/src/renderers/canvas/sigma.canvas.edges.curve')\nrequire('sigma/src/renderers/canvas/sigma.canvas.edgehovers.curve')\n\nconst echarts = require('echarts');\nrequire('echarts-wordcloud');\n\n// import Widget03 from '../../views/Widgets/Widget03'\nconst Loading = () => <div>Loading...</div>\n\nclass GeneralTrends extends Component {\n\n    grafo = undefined\n    kaywords = undefined\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hashtag_selected: \"\",\n            snaphot_selected: \"\",\n            snapshotList: [],\n            latestUsed: [],\n            snapshotmap: {},\n            messages: [],\n            chart: {},\n            tweets: 0,\n            retweets: 0,\n            reply: 0,\n            searchtext: \"\",\n            keywordOption: {}\n        }\n\n\n    }\n\n    loadHashTagNetwork = (data) => {\n\n        this.grafo.graph.clear();\n        this.grafo.refresh()\n        this.grafo.cameras[0].goTo({x: 0, y: 0, angle: 0, ratio: 1.1});\n\n        try {\n\n            data.edges.forEach(function (e) {\n                e.type = 'curve'\n                //e.color = 'rgba(151, 187, 205, 1)'\n            })\n\n            if (data.nodes.length > 25) {\n                this.grafo.settings('maxNodeSize', 4);\n            } else {\n                this.grafo.settings('maxNodeSize', 7);\n            }\n            this.grafo.graph.read(data);\n            this.grafo.refresh()\n        } catch (e) {\n\n        }\n    }\n\n    loadkeywordsCloud = (data) => {\n        let me = this\n        me.kaywords = echarts.init(document.getElementById('wordCloud'));\n\n        if (!me.kaywords.isDisposed()) {\n            me.kaywords.dispose()\n        }\n\n        me.kaywords = echarts.init(document.getElementById('wordCloud'));\n\n        me.setState({\n            keywordOption: {\n                title: {\n                    textStyle: {\n                        color: '#fff',\n                        fontFamily: 'gnuolane'\n                    }\n\n                },\n                tooltip: {\n                    show: false\n                },\n                toolbox: {\n                    show: true,\n                    orient: 'horizontal',\n                    // 'horizontal' ¦ 'vertical'\n                    x: 'right',\n                    // 'center' ¦ 'left' ¦ 'right'\n                    // ¦ {number}（x坐标，单位px）\n                    y: 'top',\n                    // 'top' ¦ 'bottom' ¦ 'center'\n                    // ¦ {number}\n                    color: ['#1e90ff', '#22bb22', '#4b0082', '#d2691e'],\n                    backgroundColor: 'rgba(0,0,0,0)',\n                    borderColor: '#ccc',\n                    borderWidth: 0,\n                    drawOutOfBound: true,\n                    padding: 5,\n                    showTitle: false,\n                    feature: {\n                        mark: {\n                            show: false\n                        },\n                        dataZoom: {\n                            show: false\n                        },\n                        dataView: {\n                            show: false,\n                        },\n                        magicType: {\n                            show: false,\n                            type: ['line', 'bar', 'stack', 'tiled']\n                        },\n                        restore: {\n                            show: false,\n                            title: 'Reload',\n                            color: 'black'\n                        },\n                        saveAsImage: {\n                            show: false,\n                            title: 'Save',\n                            name: 'KD_tag-cloud',\n                            type: 'png',\n                            lang: ['click to save']\n                        },\n                        myTool: {\n                            show: false\n                        }\n                    }\n                },\n                series: [{\n                    name: 'Cloud of Key-Concepts',\n                    type: 'wordCloud',\n                    rotationRange: [0, 0],\n                    rotationStep: 0,\n                    autoSize: {\n                        enable: true,\n                        minSize: 14\n                    },\n                    textStyle: {\n                        normal: {\n                            fontFamily: 'gnuolane'\n                        }\n                    },\n                    data: data\n                }]\n            }\n        }, () => {\n            me.kaywords.setOption(this.state.keywordOption);\n        })\n\n\n    }\n\n\n    redrawKeywords = () => {\n\n        if (this.kaywords !== undefined) {\n\n            this.kaywords = echarts.init(document.getElementById('wordCloud'));\n\n            if (!this.kaywords.isDisposed()) {\n                this.kaywords.dispose()\n            }\n\n            this.kaywords = echarts.init(document.getElementById('wordCloud'));\n\n\n            this.kaywords.setOption(this.state.keywordOption);\n        }\n        //console.log(\"res\");\n    }\n\n\n    handleHashtagChange = (selectedOption) => {\n        $('#wordCloud').html('')\n        this.grafo.graph.clear();\n        this.grafo.refresh()\n        this.grafo.cameras[0].goTo({x: 0, y: 0, angle: 0, ratio: 1.1});\n\n        let widget = this\n\n\n        this.setState({hashtag_selected: selectedOption}, () => {\n\n            //document.getElementById('graph_container').innerHTML = '<img src=\"assets/img/loader.gif\" /> '\n            //     document.getElementById('wordCloud').innerHTML = '<img src=\"assets/img/loader.gif\" /> '\n\n\n            $(\".card-header-actions\").html('<img src=\"assets/img/loader.gif\" height=\"14\"/> ')\n\n            $.ajax({\n                type: \"POST\",\n                crossDomain: true,\n                url: window.HateMeterApiUrlPrefix + \"onTheFlySnapshot\",\n                data: {'snapshot': selectedOption.label},\n                dataType: \"json\",\n                async: true,\n                success: function (response) {\n                    $(\".card-header-actions\").html('')\n                    //  document.getElementById('graph_container').innerHTML = ' '\n                    //  document.getElementById('wordCloud').innerHTML = ''\n                    if (response.hasOwnProperty(\"net\")) {\n                        widget.loadHashTagNetwork(response.net)\n                    }\n                    if (response.hasOwnProperty(\"keywords\")) {\n                        widget.loadkeywordsCloud(response.keywords)\n                    }\n                    try {\n                        ReactDOM.unmountComponentAtNode(document.getElementById('appSideBar'));\n                    } catch (e) {\n                        console.error(e);\n                    }\n\n                    ReactDOM.render(<MessagesSideBar messages={response.messages}/>, document.getElementById('appSideBar'));\n\n                },\n                error: function (xhr, status) {\n                    console.log(\"hashtag list error\");\n                }\n            });\n        });\n\n    }\n\n    componentDidMount() {\n        document.body.classList.add(\"aside-menu-lg-show\")\n        let me = this\n        let latestUsed = []\n\n\n        let widget = this\n\n        $.ajax({\n            type: \"POST\",\n            crossDomain: true,\n            url: window.HateMeterApiUrlPrefix + \"getHashtagList\",\n            data: JSON.stringify(\"\"),\n            dataType: \"json\",\n            async: true,\n            success: function (response) {\n                //   console.log(response)\n                let opts = []\n                Object.keys(response).forEach(h => {\n                    opts.push({value: h, label: h})\n                })\n                opts = opts.sort();\n                widget.setState({snapshotmap: response, hashtag_list: opts})\n            },\n            error: function (xhr, status) {\n                console.log(\"error in hashtag list\");\n            }\n        });\n\n\n        this.setState({latestUsed: Loading()}, () => {\n\n                $.ajax({\n                    type: \"POST\",\n                    crossDomain: true,\n                    url: window.HateMeterApiUrlPrefix + \"generalTrendLastUsage\",\n                    data: JSON.stringify(\"\"),\n                    dataType: \"json\",\n                    async: true,\n                    success: function (response) {\n                        for (var property in response) {\n\n                            latestUsed.push(<Row><Col xs=\"12\" sm=\"12\" lg=\"6\"><h6>{property}</h6></Col>\n                                <Col xs=\"12\" sm=\"12\" lg=\"6\"><p style={{\"fontSize\": \"11px\"}}>{response[property]}</p></Col></Row>)\n                        }\n\n                        me.setState({latestUsed: latestUsed})\n\n                    },\n                    error: function (xhr, status) {\n                        console.log(\"error in hashtag list\");\n                    }\n                });\n            }\n        )\n\n\n        this.grafo = new window.sigma({\n            graph: {\n                nodes: [],\n                edges: []\n            },\n            renderer: {\n                container: 'graph_container',\n                type: 'canvas'\n            },\n            settings: {\n                defaultLabelColor: '#000',\n                minEdgeSize: 0.2,\n                maxEdgeSize: 3,\n                // maxNodeSize:5,\n                labelThreshold: 4,\n                zoomingRatio: 1.2,\n\n                doubleClickZoomingRatio: 2.8,\n                zoomMin: 0\n            }\n        });\n        this.grafo.graph.read({nodes: [], edges: []});\n        this.grafo.refresh()\n\n\n        /// messages side bar\n\n\n    }\n\n    onFormSubmit = (evt) => {\n        evt.preventDefault();\n        this.grafo.graph.clear();\n        this.grafo.refresh()\n        this.grafo.cameras[0].goTo({x: 0, y: 0, angle: 0, ratio: 1.1});\n\n\n        $('#wordCloud').html('')\n\n        let widget = this\n        if (this.state.searchtext.length > 0) {\n            $(\".card-header-actions\").html('<img src=\"assets/img/loader.gif\" height=\"14\"/> ')\n            $.ajax({\n                type: \"POST\",\n                crossDomain: true,\n                url: window.HateMeterApiUrlPrefix + \"onTheFlySnapshot\",\n                data: {'snapshot': this.state.searchtext},\n                dataType: \"json\",\n                async: true,\n                success: function (response) {\n                    $(\".card-header-actions\").html('')\n\n                    if (response.hasOwnProperty(\"net\")) {\n                        widget.loadHashTagNetwork(response.net)\n                    }\n                    if (response.hasOwnProperty(\"keywords\")) {\n                        widget.loadkeywordsCloud(response.keywords)\n                    }\n\n                    try {\n                        ReactDOM.unmountComponentAtNode(document.getElementById('appSideBar'));\n                    } catch (e) {\n                        console.error(e);\n                    }\n\n                    ReactDOM.render(<MessagesSideBar messages={response.messages}/>, document.getElementById('appSideBar'));\n                },\n                error: function (xhr, status) {\n\n                }\n            });\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n\n                    <Col xs=\"4\" sm=\"4\" lg=\"4\">\n                        <Card>\n                            <CardHeader>\n                                Recently used hashtags/keywords (Top 5)\n                            </CardHeader>\n                            <CardBody>\n\n                                {this.state.latestUsed}\n                            </CardBody>\n                        </Card>\n\n                        <Card>\n                            <CardHeader>\n                                Keywords\n                                <div className=\"card-header-actions\">\n\n                                </div>\n                            </CardHeader>\n                            <CardBody>\n\n                                <div id=\"wordCloud\" className=\"chart-wrapper\" style={{height: \"300px\", width: \"100%\"}} onResize={() => this.redrawKeywords()}>\n                                </div>\n                                <ReactResizeDetector handleWidth handleHeight onResize={() => this.redrawKeywords()}/>\n\n                            </CardBody>\n                        </Card>\n\n                    </Col>\n                    <Col xs=\"8\" sm=\"8\" lg=\"8\">\n                        <Card>\n                            {/*<CardHeader>*/}\n                            {/*Hashtag Selection*/}\n                            {/*</CardHeader>*/}\n                            <CardBody >\n                                <Row>\n                                    <Col xs=\"10\" sm=\"10\" lg=\"6\">\n                                        <Row>\n                                            <Col xs=\"6\" sm=\"6\" lg=\"6\">\n                                                <Label htmlFor=\"htselect\">Select a Hashtag:</Label>\n                                            </Col>\n                                            <Col xs=\"6\" sm=\"6\" lg=\"6\">\n                                                <Select\n                                                    value={this.state.hashtag_selected}\n                                                    onChange={this.handleHashtagChange}\n                                                    options={this.state.hashtag_list}\n                                                />\n                                            </Col>\n\n                                        </Row>\n                                    </Col>\n                                    <Col xs=\"10\" sm=\"10\" lg=\"1\">\n                                        <Label htmlFor=\"htselect\">Or</Label>\n                                    </Col>\n\n                                    <Col xs=\"10\" sm=\"10\" lg=\"5\">\n                                        <Row>\n                                            <Col xs=\"1\" sm=\"1\" lg=\"1\">\n                                                <i onClick={this.onFormSubmit} className=\"fa fa-search\" style={{marginRight: \"5px\"}} style={{cursor: \"pointer\"}}/>\n                                            </Col>\n                                            <Col xs=\"10\" sm=\"10\" lg=\"10\">\n                                                    <Form className=\"form-inline px-8 d-md-down-none\" onSubmit={this.onFormSubmit}>\n                                                        <Input placeholder=\"Search...\" ref={\"search\"}\n                                                               onChange={e => this.setState({searchtext: e.target.value})}\n                                                               style={{width:\"100%\"}}\n                                                        />\n                                                    </Form>\n\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                            {/*<CardFooter><i className=\"icons cui-globe\"><a href=\"http://hatemeter.eu\" target=\"_blank\">hatemeter.eu</a></i></CardFooter>*/}\n                        </Card>\n                        <Card>\n                            <CardHeader>\n                                Hashtag co-occurrence network\n                                <div className=\"card-header-actions\">\n\n                                </div>\n                            </CardHeader>\n                            <CardBody>\n                                <div id=\"graph_container\" className=\"graphcontainer\"/>\n                            </CardBody>\n\n                        </Card>\n\n\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default GeneralTrends;\n","import React, {Component} from 'react';\nimport {Nav, NavItem, NavLink, Progress, TabContent, TabPane, ListGroup, ListGroupItem} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {AppSwitch} from '@coreui/react'\n\n\nclass MessagesSideBar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messages: []\n        }\n\n    }\n\n\n    render() {\n        console.log(this.props.messages);\n        // eslint-disable-next-line\n        let messagesList;\n        if (this.props.messages !== undefined) {\n             messagesList = this.props.messages.map(function (m) {\n                return <div>\n                    <div className=\"message\">\n                        <div className=\" mr-3 float-left\">\n                            <div className=\"avatar\">\n                                <img src={m.profileImgUrl} className=\"img-avatar\"/>\n                                {/*<span className=\"avatar-status badge-success\"></span>*/}\n                            </div>\n\n                        </div>\n                        <div>\n                            <small className=\"text-muted mt-1\">{m.date}</small>\n                            <a href={\"#/counterNarratives?message=\"+encodeURI(m.text).replace(/#/g, '%23').replace(/&/g,'%26')}><i className=\"tweetReplyCN fa fa-comments-o\"/></a>\n                            <br/>\n                            <small className=\"text-muted\"><a href={\"https://twitter.com/\" + m.by} target=\"_blank\">{m.by}</a></small>\n                            {m.type === \"rt\" ? <small className=\"text-muted\"><i className=\"fa fa-retweet\"/> <a href={\"https://twitter.com/\" + m.fromUser} target=\"_blank\">{m.fromUser}</a></small> : \"\"}\n\n                        </div>\n                        {/*<div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>*/}\n                        <br/>\n                        <div className=\"tweetMsgBox\" onClick={() => {\n                            window.open(\"https://twitter.com/\" + m.by + \"/status/\" + m.id, '_blank');\n                        }}>\n                            <small className=\"text-muted\">{m.text} </small>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>;\n            })\n        }\n        return (\n            <React.Fragment>\n\n                <TabContent activeTab=\"1\">\n                    <TabPane tabId=\"1\" className=\"p-3\">\n                        {messagesList}\n                    </TabPane>\n\n                </TabContent>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default MessagesSideBar;\n"],"sourceRoot":""}