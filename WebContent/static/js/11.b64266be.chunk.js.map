{"version":3,"sources":["views/Alerts/Alerts.jsx","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js"],"names":["options","tooltips","enabled","custom","CustomTooltips","scales","xAxes","ticks","display","maintainAspectRatio","Alerts","props","_this","Object","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleHashtagChange","selectedOption","widget","_Volumes_Storage_Dropbox_DropBoxesCodes_HaterMEterUI_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","setState","hashtag_selected","$","ajax","type","crossDomain","url","window","HateMeterApiUrlPrefix","data","hashtag","label","dataType","async","success","response","chData","ds","pointBackgroundColors","threshold","labels","forEach","d","push","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","pointBackgroundColor","lineTension","datasets","chart","error","xhr","status","console","log","state","snaphot_selected","snapshotList","latestUsed","snapshotmap","messages","tweets","retweets","reply","searchtext","keywordOption","document","body","classList","remove","JSON","stringify","opts","keys","h","value","sort","hashtag_list","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","sm","lg","htmlFor","react_select__WEBPACK_IMPORTED_MODULE_8__","onChange","style","height","react_chartjs_2__WEBPACK_IMPORTED_MODULE_9__","ref","Component","exports","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","id","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","getElementById","parentNode","appendChild","opacity","yAlign","add","titleLines","title","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","map","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","split","length","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","left","caretX","top","caretY","defineProperty","factory"],"mappings":"0NAoBMA,EAAU,CACZC,SAAU,CACNC,SAAS,EACTC,OAAQC,kBAEZC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,SAAS,MAIrBC,qBAAqB,GAKnBC,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA8CVQ,oBAAsB,SAACC,GAEnB,IAAIC,EAAMR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,IAGVA,EAAKW,SAAS,CAACC,iBAAkBJ,GAAiB,WAG9CK,IAAEC,KAAK,CACHC,KAAM,OACNC,aAAa,EACbC,IAAKC,OAAOC,sBAAwB,gBACpCC,KAAM,CAACC,QAAWb,EAAec,OACjCC,SAAU,OACVC,OAAO,EACPC,QAAS,SAAUC,GAGf,IAAIC,EAAS,GACTC,EAAK,GACLC,EAAwB,GACxBC,EAAYJ,EAASI,UACzBH,EAAOI,OAASL,EAASK,OACzBH,EAAGR,KAAOM,EAASN,KAEnBM,EAASN,KAAKY,QAAQ,SAAAC,GACdA,EAAIH,EACJD,EAAsBK,KAAK,sBAE3BL,EAAsBK,KAAK,8BAKnCN,EAAGN,MAAQ,wBAEXM,EAAGO,gBAAkB,2BACrBP,EAAGQ,YAAc,2BACjBR,EAAGS,YAAc,EACjBT,EAAGU,qBAAuB,2BAC1BV,EAAGW,iBAAmB,2BACtBX,EAAGY,qBAAuBX,EAC1BD,EAAGa,YAAc,EAGjBd,EAAOe,SAAW,GAClBf,EAAOe,SAASR,KAAKN,GACrBnB,EAAOE,SAAS,CACZgC,MAAOhB,KAIfiB,MAAO,SAAUC,EAAKC,GAClBC,QAAQC,IAAIF,SAlGxB9C,EAAKiD,MAAQ,CACTrC,iBAAkB,GAClBsC,iBAAkB,GAClBC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVX,MAAO,GACPY,OAAQ,EACRC,SAAU,EACVC,MAAO,EACPC,WAAY,GACZC,cAAe,IAdJ3D,mFAoBf4D,SAASC,KAAKC,UAAUC,OAAO,sBAE/B,IAAItD,EAASN,KAEbU,IAAEC,KAAK,CACHC,KAAM,OACNC,aAAa,EACbC,IAAKC,OAAOC,sBAAwB,uBACpCC,KAAM4C,KAAKC,UAAU,IACrB1C,SAAU,OACVC,OAAO,EACPC,QAAS,SAAUC,GACf,IAAIwC,EAAO,GACXjE,OAAOkE,KAAKzC,GAAUM,QAAQ,SAAAoC,GAC1BF,EAAKhC,KAAK,CAACmC,MAAO3C,EAAS0C,GAAI9C,MAAOI,EAAS0C,OAEnDF,EAAOA,EAAKI,OACZ7D,EAAOE,SAAS,CAAC4D,aAAcL,KAEnCtB,MAAO,SAAUC,EAAKC,GAClBC,QAAQC,IAAI,6DAsEpB,OACIwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACpBP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAIIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpBP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAClBP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOI,QAAQ,YAAf,sBAEJR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAClBP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACIZ,MAAOlE,KAAK8C,MAAMrC,iBAClBsE,SAAU/E,KAAKI,oBACfnB,QAASe,KAAK8C,MAAMsB,uBAaxDC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACpBP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAIIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBQ,MAAO,CAACC,OAAQ,UAC3CZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMjE,KAAMjB,KAAK8C,MAAMN,MAAOvD,QAASA,EAASkG,IAAI,4BAxJnEC,aAmKNzF,kCCtMd,SAAA0F,GACD,aA6HAA,EAAAhG,eArHA,SAAAiG,GACA,IAAAzF,EAAAG,KAgBAuF,EAAA,CACAC,MAAA,QACAC,MAAA,QACAC,gBAAA,kBACAC,aAAA,eACAC,aAAA,eACAC,kBAAA,oBACAC,wBAAA,0BACAC,wBAAA,0BACAC,wBAAA,0BACAC,eAAA,iBACAC,oBAAA,uBAEAC,EAAA,CACAC,IAAA,MACAC,KAAA,OACAC,SAAAtG,KAAAuG,OAAAC,OAAAC,IA7BA,WACA,IAAAC,EAAA,WAGA,OADA,OACA,EAAAC,KAAAC,UAAA,GAAAC,SAFA,KAKAC,EAAA,YAAAJ,SAGA,OADA7G,EAAA0G,OAAAC,OAAAC,GAAAK,EACAA,EAmBAC,IAAA,YAEAC,EAAAvD,SAAAwD,eAAAd,EAAAG,SAWA,GATAU,KACAA,EAAAvD,SAAAc,cAAA,QACAkC,GAAAN,EAAAG,QACAU,EAAAxC,UAAAe,EAAAG,gBAEA1F,KAAAuG,OAAAC,OAAAU,WAAAC,YAAAH,IAIA,IAAA1B,EAAA8B,QAAA,CAeA,GATAJ,EAAArD,UAAAC,OAAA2B,EAAAC,MAAAD,EAAAE,MAAAF,EAAAI,cAEAL,EAAA+B,OACAL,EAAArD,UAAA2D,IAAAhC,EAAA+B,QAEAL,EAAArD,UAAA2D,IAAA/B,EAAAI,cAIAL,EAAA5B,KAAA,CACA,IAAA6D,EAAAjC,EAAAkC,OAAA,GACAC,EAAAhE,SAAAc,cAAA4B,EAAAC,KACAqB,EAAAjD,UAAAe,EAAAU,eACAsB,EAAA1F,QAAA,SAAA2F,GACA,IAAAE,EAAAjE,SAAAc,cAAA4B,EAAAC,KACAsB,EAAAlD,UAAAe,EAAAW,oBACAwB,EAAAC,UAAAH,EACAC,EAAAN,YAAAO,KAEA,IAAAE,EAAAnE,SAAAc,cAAA4B,EAAAC,KACAwB,EAAApD,UAAAe,EAAAK,aACA,IAAAiC,EAAAvC,EAAA5B,KAAAoE,IAAA,SAAAC,GACA,OAAAA,EAAAC,QAEAH,EAAAhG,QAAA,SAAAkG,EAAAE,GACA,IAAAC,EAAAzE,SAAAc,cAAA4B,EAAAC,KACA8B,EAAA1D,UAAAe,EAAAM,kBACA,IAAAsC,EAAA7C,EAAA8C,YAAAH,GACAI,EAAA5E,SAAAc,cAAA4B,EAAAE,MAKA,GAJAgC,EAAA7D,UAAAe,EAAAO,wBACAuC,EAAArD,MAAAhD,gBAAAmG,EAAAnG,gBACAkG,EAAAf,YAAAkB,GAEAN,EAAA,GAAAO,MAAA,KAAAC,OAAA,GACA,IAAAC,EAAA/E,SAAAc,cAAA4B,EAAAE,MACAmC,EAAAhE,UAAAe,EAAAQ,wBACAyC,EAAAb,UAAAI,EAAA,GAAAO,MAAA,SACAJ,EAAAf,YAAAqB,GACA,IAAAC,EAAAhF,SAAAc,cAAA4B,EAAAE,MACAoC,EAAAjE,UAAAe,EAAAS,wBACAyC,EAAAd,UAAAI,EAAA,GAAAO,MAAA,MAAAI,MACAR,EAAAf,YAAAsB,OACS,CACT,IAAAE,EAAAlF,SAAAc,cAAA4B,EAAAE,MAEAsC,EAAAnE,UAAAe,EAAAS,wBACA2C,EAAAhB,UAAAI,EAAA,GACAG,EAAAf,YAAAwB,GAGAf,EAAAT,YAAAe,KAEAlB,EAAAW,UAAA,GACAX,EAAAG,YAAAM,GACAT,EAAAG,YAAAS,GAGA,IAAAgB,EAAA5I,KAAAuG,OAAAC,OAAAqC,UACAC,EAAA9I,KAAAuG,OAAAC,OAAAuC,WAEA/B,EAAAhC,MAAAoC,QAAA,EACAJ,EAAAhC,MAAAgE,KAAAF,EAAAxD,EAAA2D,OAAA,KACAjC,EAAAhC,MAAAkE,IAAAN,EAAAtD,EAAA6D,OAAA,UAnEAnC,EAAAhC,MAAAoC,QAAA,GAuEAtH,OAAAsJ,eAAA/D,EAAA,cACAnB,OAAA,IAjI8DmF,CAAAhE","file":"static/js/11.b64266be.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport $ from \"jquery\";\nimport Select from 'react-select';\nimport {HorizontalBar, Line} from 'react-chartjs-2';\n\nimport {\n\n    Card,\n    CardBody,\n    Form,\n    Input,\n    CardHeader,\n\n    Col, Label,\n\n    Row\n} from 'reactstrap';\nimport {CustomTooltips} from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\n\n\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    scales: {\n        xAxes: [{\n            ticks: {\n                display: false // angle in degrees\n            }\n        }]\n    },\n    maintainAspectRatio: false\n\n}\n\n\nclass Alerts extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag_selected: \"\",\n            snaphot_selected: \"\",\n            snapshotList: [],\n            latestUsed: [],\n            snapshotmap: {},\n            messages: [],\n            chart: {},\n            tweets: 0,\n            retweets: 0,\n            reply: 0,\n            searchtext: \"\",\n            keywordOption: {}\n        }\n    }\n\n\n    componentDidMount() {\n        document.body.classList.remove(\"aside-menu-lg-show\")\n\n        let widget = this\n\n        $.ajax({\n            type: \"POST\",\n            crossDomain: true,\n            url: window.HateMeterApiUrlPrefix + \"getAlertsHashtagList\",\n            data: JSON.stringify(\"\"),\n            dataType: \"json\",\n            async: true,\n            success: function (response) {\n                let opts = []\n                Object.keys(response).forEach(h => {\n                    opts.push({value: response[h], label: response[h]})\n                })\n                opts = opts.sort();\n                widget.setState({hashtag_list: opts})\n            },\n            error: function (xhr, status) {\n                console.log(\"error in hashtag list\");\n            }\n        });\n\n    }\n\n\n    handleHashtagChange = (selectedOption) => {\n\n        let widget = this\n\n\n        this.setState({hashtag_selected: selectedOption}, () => {\n\n\n            $.ajax({\n                type: \"POST\",\n                crossDomain: true,\n                url: window.HateMeterApiUrlPrefix + \"getAlertsData\",\n                data: {'hashtag': selectedOption.label},\n                dataType: \"json\",\n                async: true,\n                success: function (response) {\n                    //  console.log(response);\n\n                    let chData = {}\n                    let ds = {}\n                    let pointBackgroundColors = [];\n                    let threshold = response.threshold\n                    chData.labels = response.labels\n                    ds.data = response.data\n\n                    response.data.forEach(d => {\n                        if (d > threshold) {\n                            pointBackgroundColors.push(\"rgba(205,0,18,0.8)\")\n                        } else {\n                            pointBackgroundColors.push(\"rgba(151, 187, 205, 0.8)\")\n                        }\n\n                    })\n\n                    ds.label = \"Hashtag peak detector\"\n\n                    ds.backgroundColor = \"rgba(151, 187, 205, 0.5)\"\n                    ds.borderColor = \"rgba(151, 187, 205, 0.8)\"\n                    ds.borderWidth = 1\n                    ds.hoverBackgroundColor = \"rgba(151, 187, 205, 0.8)\"\n                    ds.hoverBorderColor = \"rgba(151, 187, 205, 0.8)\"\n                    ds.pointBackgroundColor = pointBackgroundColors\n                    ds.lineTension = 0\n\n\n                    chData.datasets = []\n                    chData.datasets.push(ds)\n                    widget.setState({\n                        chart: chData\n                    })\n                    // widget.loadHashTagNetwork(response.net)\n                },\n                error: function (xhr, status) {\n                    console.log(status)\n                    //alert(\"error\");\n                }\n            });\n\n\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\" sm=\"12\" lg=\"12\">\n                        <Card>\n                            {/*<CardHeader>*/}\n                            {/*Hashtag Selection*/}\n                            {/*</CardHeader>*/}\n                            <CardBody>\n                                <Row>\n                                    <Col xs=\"10\" sm=\"10\" lg=\"6\">\n                                        <Row>\n                                            <Col xs=\"6\" sm=\"6\" lg=\"6\">\n                                                <Label htmlFor=\"htselect\">Select a Hashtag:</Label>\n                                            </Col>\n                                            <Col xs=\"6\" sm=\"6\" lg=\"6\">\n                                                <Select\n                                                    value={this.state.hashtag_selected}\n                                                    onChange={this.handleHashtagChange}\n                                                    options={this.state.hashtag_list}\n                                                />\n                                            </Col>\n\n                                        </Row>\n                                    </Col>\n\n                                </Row>\n                            </CardBody>\n                            {/*<CardFooter><i className=\"icons cui-globe\"><a href=\"http://hatemeter.eu\" target=\"_blank\">hatemeter.eu</a></i></CardFooter>*/}\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\" sm=\"12\" lg=\"12\">\n                        <Card>\n                            {/*<CardHeader>*/}\n                            {/*Hashtag Selection*/}\n                            {/*</CardHeader>*/}\n                            <CardBody>\n                                <div className=\"chart-wrapper\" style={{height: \"400px\"}}>\n                                    <Line data={this.state.chart} options={options} ref=\"chartDaily\"/>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Alerts;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}